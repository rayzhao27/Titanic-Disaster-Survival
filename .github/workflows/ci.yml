name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest flake8 black
    
    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format with black
      run: black --check src/ || echo "Black formatting check failed, but continuing"
    
    - name: Run tests
      run: |
        if [ -d "tests" ]; then
          pytest tests/ -v
        else
          echo "No tests directory found, skipping tests"
        fi
    
    - name: Train and evaluate model
      run: |
        python main.py --log-level INFO
        echo "Model training completed successfully"

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: docker build -t titanic-ml:latest .
    
    - name: Test Docker container
      run: |
        docker run -d -p 8000:8000 --name test-container titanic-ml:latest
        sleep 15
        curl -f http://localhost:8000/health/json || echo "Health check failed"
        docker stop test-container
        docker rm test-container
